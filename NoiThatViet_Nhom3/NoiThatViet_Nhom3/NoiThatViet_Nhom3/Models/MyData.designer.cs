#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NoiThatViet_Nhom3.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="WebCuaNhom3")]
	public partial class MyDataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertChiTietDanhMucYeuThich(ChiTietDanhMucYeuThich instance);
    partial void UpdateChiTietDanhMucYeuThich(ChiTietDanhMucYeuThich instance);
    partial void DeleteChiTietDanhMucYeuThich(ChiTietDanhMucYeuThich instance);
    partial void InsertWishList(WishList instance);
    partial void UpdateWishList(WishList instance);
    partial void DeleteWishList(WishList instance);
    partial void InsertChiTietDonHang(ChiTietDonHang instance);
    partial void UpdateChiTietDonHang(ChiTietDonHang instance);
    partial void DeleteChiTietDonHang(ChiTietDonHang instance);
    partial void InsertChiTietGioHang(ChiTietGioHang instance);
    partial void UpdateChiTietGioHang(ChiTietGioHang instance);
    partial void DeleteChiTietGioHang(ChiTietGioHang instance);
    partial void InsertChiTietKhuyenMai(ChiTietKhuyenMai instance);
    partial void UpdateChiTietKhuyenMai(ChiTietKhuyenMai instance);
    partial void DeleteChiTietKhuyenMai(ChiTietKhuyenMai instance);
    partial void InsertDanhGiaSP(DanhGiaSP instance);
    partial void UpdateDanhGiaSP(DanhGiaSP instance);
    partial void DeleteDanhGiaSP(DanhGiaSP instance);
    partial void InsertDichVu(DichVu instance);
    partial void UpdateDichVu(DichVu instance);
    partial void DeleteDichVu(DichVu instance);
    partial void InsertDonHang(DonHang instance);
    partial void UpdateDonHang(DonHang instance);
    partial void DeleteDonHang(DonHang instance);
    partial void InsertGioHang(GioHang instance);
    partial void UpdateGioHang(GioHang instance);
    partial void DeleteGioHang(GioHang instance);
    partial void InsertHinhAnhSanPham(HinhAnhSanPham instance);
    partial void UpdateHinhAnhSanPham(HinhAnhSanPham instance);
    partial void DeleteHinhAnhSanPham(HinhAnhSanPham instance);
    partial void InsertKhuyenMai(KhuyenMai instance);
    partial void UpdateKhuyenMai(KhuyenMai instance);
    partial void DeleteKhuyenMai(KhuyenMai instance);
    partial void InsertLoaiSP(LoaiSP instance);
    partial void UpdateLoaiSP(LoaiSP instance);
    partial void DeleteLoaiSP(LoaiSP instance);
    partial void InsertPhanQuyenNhanVien(PhanQuyenNhanVien instance);
    partial void UpdatePhanQuyenNhanVien(PhanQuyenNhanVien instance);
    partial void DeletePhanQuyenNhanVien(PhanQuyenNhanVien instance);
    partial void InsertPhong(Phong instance);
    partial void UpdatePhong(Phong instance);
    partial void DeletePhong(Phong instance);
    partial void InsertSanPham(SanPham instance);
    partial void UpdateSanPham(SanPham instance);
    partial void DeleteSanPham(SanPham instance);
    partial void InsertTaiKhoan(TaiKhoan instance);
    partial void UpdateTaiKhoan(TaiKhoan instance);
    partial void DeleteTaiKhoan(TaiKhoan instance);
    partial void InsertThongTinCaNhan(ThongTinCaNhan instance);
    partial void UpdateThongTinCaNhan(ThongTinCaNhan instance);
    partial void DeleteThongTinCaNhan(ThongTinCaNhan instance);
    #endregion
		
		public MyDataDataContext() :
base(global::System.Configuration.ConfigurationManager.ConnectionStrings["WebCuaNhom3ConnectionString"].ConnectionString, mappingSource)
        {
			OnCreated();
		}
		
		public MyDataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ChiTietDanhMucYeuThich> ChiTietDanhMucYeuThiches
		{
			get
			{
				return this.GetTable<ChiTietDanhMucYeuThich>();
			}
		}
		
		public System.Data.Linq.Table<WishList> WishLists
		{
			get
			{
				return this.GetTable<WishList>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietDonHang> ChiTietDonHangs
		{
			get
			{
				return this.GetTable<ChiTietDonHang>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietGioHang> ChiTietGioHangs
		{
			get
			{
				return this.GetTable<ChiTietGioHang>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietKhuyenMai> ChiTietKhuyenMais
		{
			get
			{
				return this.GetTable<ChiTietKhuyenMai>();
			}
		}
		
		public System.Data.Linq.Table<DanhGiaSP> DanhGiaSPs
		{
			get
			{
				return this.GetTable<DanhGiaSP>();
			}
		}
		
		public System.Data.Linq.Table<DichVu> DichVus
		{
			get
			{
				return this.GetTable<DichVu>();
			}
		}
		
		public System.Data.Linq.Table<DonHang> DonHangs
		{
			get
			{
				return this.GetTable<DonHang>();
			}
		}
		
		public System.Data.Linq.Table<GioHang> GioHangs
		{
			get
			{
				return this.GetTable<GioHang>();
			}
		}
		
		public System.Data.Linq.Table<HinhAnhSanPham> HinhAnhSanPhams
		{
			get
			{
				return this.GetTable<HinhAnhSanPham>();
			}
		}
		
		public System.Data.Linq.Table<KhuyenMai> KhuyenMais
		{
			get
			{
				return this.GetTable<KhuyenMai>();
			}
		}
		
		public System.Data.Linq.Table<LoaiSP> LoaiSPs
		{
			get
			{
				return this.GetTable<LoaiSP>();
			}
		}
		
		public System.Data.Linq.Table<PhanQuyenNhanVien> PhanQuyenNhanViens
		{
			get
			{
				return this.GetTable<PhanQuyenNhanVien>();
			}
		}
		
		public System.Data.Linq.Table<Phong> Phongs
		{
			get
			{
				return this.GetTable<Phong>();
			}
		}
		
		public System.Data.Linq.Table<SanPham> SanPhams
		{
			get
			{
				return this.GetTable<SanPham>();
			}
		}
		
		public System.Data.Linq.Table<TaiKhoan> TaiKhoans
		{
			get
			{
				return this.GetTable<TaiKhoan>();
			}
		}
		
		public System.Data.Linq.Table<ThongTinCaNhan> ThongTinCaNhans
		{
			get
			{
				return this.GetTable<ThongTinCaNhan>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietDanhMucYeuThich")]
	public partial class ChiTietDanhMucYeuThich : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaSanPham;
		
		private string _WishlistID;
		
		private EntityRef<WishList> _WishList;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSanPhamChanging(string value);
    partial void OnMaSanPhamChanged();
    partial void OnWishlistIDChanging(string value);
    partial void OnWishlistIDChanged();
    #endregion
		
		public ChiTietDanhMucYeuThich()
		{
			this._WishList = default(EntityRef<WishList>);
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSanPham", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSanPham
		{
			get
			{
				return this._MaSanPham;
			}
			set
			{
				if ((this._MaSanPham != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSanPhamChanging(value);
					this.SendPropertyChanging();
					this._MaSanPham = value;
					this.SendPropertyChanged("MaSanPham");
					this.OnMaSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WishlistID", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string WishlistID
		{
			get
			{
				return this._WishlistID;
			}
			set
			{
				if ((this._WishlistID != value))
				{
					if (this._WishList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWishlistIDChanging(value);
					this.SendPropertyChanging();
					this._WishlistID = value;
					this.SendPropertyChanged("WishlistID");
					this.OnWishlistIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WishList_ChiTietDanhMucYeuThich", Storage="_WishList", ThisKey="WishlistID", OtherKey="WishlistID", IsForeignKey=true)]
		public WishList WishList
		{
			get
			{
				return this._WishList.Entity;
			}
			set
			{
				WishList previousValue = this._WishList.Entity;
				if (((previousValue != value) 
							|| (this._WishList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WishList.Entity = null;
						previousValue.ChiTietDanhMucYeuThiches.Remove(this);
					}
					this._WishList.Entity = value;
					if ((value != null))
					{
						value.ChiTietDanhMucYeuThiches.Add(this);
						this._WishlistID = value.WishlistID;
					}
					else
					{
						this._WishlistID = default(string);
					}
					this.SendPropertyChanged("WishList");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietDanhMucYeuThich", Storage="_SanPham", ThisKey="MaSanPham", OtherKey="MaSanPham", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.ChiTietDanhMucYeuThiches.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.ChiTietDanhMucYeuThiches.Add(this);
						this._MaSanPham = value.MaSanPham;
					}
					else
					{
						this._MaSanPham = default(string);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WishList")]
	public partial class WishList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _WishlistID;
		
		private int _id;
		
		private EntitySet<ChiTietDanhMucYeuThich> _ChiTietDanhMucYeuThiches;
		
		private EntityRef<TaiKhoan> _TaiKhoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWishlistIDChanging(string value);
    partial void OnWishlistIDChanged();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    #endregion
		
		public WishList()
		{
			this._ChiTietDanhMucYeuThiches = new EntitySet<ChiTietDanhMucYeuThich>(new Action<ChiTietDanhMucYeuThich>(this.attach_ChiTietDanhMucYeuThiches), new Action<ChiTietDanhMucYeuThich>(this.detach_ChiTietDanhMucYeuThiches));
			this._TaiKhoan = default(EntityRef<TaiKhoan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WishlistID", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string WishlistID
		{
			get
			{
				return this._WishlistID;
			}
			set
			{
				if ((this._WishlistID != value))
				{
					this.OnWishlistIDChanging(value);
					this.SendPropertyChanging();
					this._WishlistID = value;
					this.SendPropertyChanged("WishlistID");
					this.OnWishlistIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._TaiKhoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WishList_ChiTietDanhMucYeuThich", Storage="_ChiTietDanhMucYeuThiches", ThisKey="WishlistID", OtherKey="WishlistID")]
		public EntitySet<ChiTietDanhMucYeuThich> ChiTietDanhMucYeuThiches
		{
			get
			{
				return this._ChiTietDanhMucYeuThiches;
			}
			set
			{
				this._ChiTietDanhMucYeuThiches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_WishList", Storage="_TaiKhoan", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public TaiKhoan TaiKhoan
		{
			get
			{
				return this._TaiKhoan.Entity;
			}
			set
			{
				TaiKhoan previousValue = this._TaiKhoan.Entity;
				if (((previousValue != value) 
							|| (this._TaiKhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiKhoan.Entity = null;
						previousValue.WishLists.Remove(this);
					}
					this._TaiKhoan.Entity = value;
					if ((value != null))
					{
						value.WishLists.Add(this);
						this._id = value.id;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("TaiKhoan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietDanhMucYeuThiches(ChiTietDanhMucYeuThich entity)
		{
			this.SendPropertyChanging();
			entity.WishList = this;
		}
		
		private void detach_ChiTietDanhMucYeuThiches(ChiTietDanhMucYeuThich entity)
		{
			this.SendPropertyChanging();
			entity.WishList = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietDonHang")]
	public partial class ChiTietDonHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaDH;
		
		private string _MaGioHang;
		
		private string _MaSanPham;
		
		private EntityRef<DonHang> _DonHang;
		
		private EntityRef<GioHang> _GioHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDHChanging(string value);
    partial void OnMaDHChanged();
    partial void OnMaGioHangChanging(string value);
    partial void OnMaGioHangChanged();
    partial void OnMaSanPhamChanging(string value);
    partial void OnMaSanPhamChanged();
    #endregion
		
		public ChiTietDonHang()
		{
			this._DonHang = default(EntityRef<DonHang>);
			this._GioHang = default(EntityRef<GioHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDH", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDH
		{
			get
			{
				return this._MaDH;
			}
			set
			{
				if ((this._MaDH != value))
				{
					if (this._DonHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDHChanging(value);
					this.SendPropertyChanging();
					this._MaDH = value;
					this.SendPropertyChanged("MaDH");
					this.OnMaDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGioHang", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaGioHang
		{
			get
			{
				return this._MaGioHang;
			}
			set
			{
				if ((this._MaGioHang != value))
				{
					if (this._GioHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGioHangChanging(value);
					this.SendPropertyChanging();
					this._MaGioHang = value;
					this.SendPropertyChanged("MaGioHang");
					this.OnMaGioHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSanPham", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSanPham
		{
			get
			{
				return this._MaSanPham;
			}
			set
			{
				if ((this._MaSanPham != value))
				{
					this.OnMaSanPhamChanging(value);
					this.SendPropertyChanging();
					this._MaSanPham = value;
					this.SendPropertyChanged("MaSanPham");
					this.OnMaSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_ChiTietDonHang", Storage="_DonHang", ThisKey="MaDH", OtherKey="MaDH", IsForeignKey=true)]
		public DonHang DonHang
		{
			get
			{
				return this._DonHang.Entity;
			}
			set
			{
				DonHang previousValue = this._DonHang.Entity;
				if (((previousValue != value) 
							|| (this._DonHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DonHang.Entity = null;
						previousValue.ChiTietDonHangs.Remove(this);
					}
					this._DonHang.Entity = value;
					if ((value != null))
					{
						value.ChiTietDonHangs.Add(this);
						this._MaDH = value.MaDH;
					}
					else
					{
						this._MaDH = default(string);
					}
					this.SendPropertyChanged("DonHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GioHang_ChiTietDonHang", Storage="_GioHang", ThisKey="MaGioHang", OtherKey="MaGioHang", IsForeignKey=true)]
		public GioHang GioHang
		{
			get
			{
				return this._GioHang.Entity;
			}
			set
			{
				GioHang previousValue = this._GioHang.Entity;
				if (((previousValue != value) 
							|| (this._GioHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GioHang.Entity = null;
						previousValue.ChiTietDonHangs.Remove(this);
					}
					this._GioHang.Entity = value;
					if ((value != null))
					{
						value.ChiTietDonHangs.Add(this);
						this._MaGioHang = value.MaGioHang;
					}
					else
					{
						this._MaGioHang = default(string);
					}
					this.SendPropertyChanged("GioHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietGioHang")]
	public partial class ChiTietGioHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaGioHang;
		
		private string _MaSanPham;
		
		private System.Nullable<int> _SoLuong;
		
		private System.Nullable<int> _ThanhTien;
		
		private EntityRef<GioHang> _GioHang;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaGioHangChanging(string value);
    partial void OnMaGioHangChanged();
    partial void OnMaSanPhamChanging(string value);
    partial void OnMaSanPhamChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnThanhTienChanging(System.Nullable<int> value);
    partial void OnThanhTienChanged();
    #endregion
		
		public ChiTietGioHang()
		{
			this._GioHang = default(EntityRef<GioHang>);
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGioHang", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaGioHang
		{
			get
			{
				return this._MaGioHang;
			}
			set
			{
				if ((this._MaGioHang != value))
				{
					if (this._GioHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGioHangChanging(value);
					this.SendPropertyChanging();
					this._MaGioHang = value;
					this.SendPropertyChanged("MaGioHang");
					this.OnMaGioHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSanPham", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSanPham
		{
			get
			{
				return this._MaSanPham;
			}
			set
			{
				if ((this._MaSanPham != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSanPhamChanging(value);
					this.SendPropertyChanging();
					this._MaSanPham = value;
					this.SendPropertyChanged("MaSanPham");
					this.OnMaSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhTien", DbType="Int")]
		public System.Nullable<int> ThanhTien
		{
			get
			{
				return this._ThanhTien;
			}
			set
			{
				if ((this._ThanhTien != value))
				{
					this.OnThanhTienChanging(value);
					this.SendPropertyChanging();
					this._ThanhTien = value;
					this.SendPropertyChanged("ThanhTien");
					this.OnThanhTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GioHang_ChiTietGioHang", Storage="_GioHang", ThisKey="MaGioHang", OtherKey="MaGioHang", IsForeignKey=true)]
		public GioHang GioHang
		{
			get
			{
				return this._GioHang.Entity;
			}
			set
			{
				GioHang previousValue = this._GioHang.Entity;
				if (((previousValue != value) 
							|| (this._GioHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GioHang.Entity = null;
						previousValue.ChiTietGioHangs.Remove(this);
					}
					this._GioHang.Entity = value;
					if ((value != null))
					{
						value.ChiTietGioHangs.Add(this);
						this._MaGioHang = value.MaGioHang;
					}
					else
					{
						this._MaGioHang = default(string);
					}
					this.SendPropertyChanged("GioHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietGioHang", Storage="_SanPham", ThisKey="MaSanPham", OtherKey="MaSanPham", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.ChiTietGioHangs.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.ChiTietGioHangs.Add(this);
						this._MaSanPham = value.MaSanPham;
					}
					else
					{
						this._MaSanPham = default(string);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietKhuyenMai")]
	public partial class ChiTietKhuyenMai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaSanPham;
		
		private string _MaVoucher;
		
		private EntityRef<KhuyenMai> _KhuyenMai;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSanPhamChanging(string value);
    partial void OnMaSanPhamChanged();
    partial void OnMaVoucherChanging(string value);
    partial void OnMaVoucherChanged();
    #endregion
		
		public ChiTietKhuyenMai()
		{
			this._KhuyenMai = default(EntityRef<KhuyenMai>);
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSanPham", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSanPham
		{
			get
			{
				return this._MaSanPham;
			}
			set
			{
				if ((this._MaSanPham != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSanPhamChanging(value);
					this.SendPropertyChanging();
					this._MaSanPham = value;
					this.SendPropertyChanged("MaSanPham");
					this.OnMaSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaVoucher", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaVoucher
		{
			get
			{
				return this._MaVoucher;
			}
			set
			{
				if ((this._MaVoucher != value))
				{
					if (this._KhuyenMai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaVoucherChanging(value);
					this.SendPropertyChanging();
					this._MaVoucher = value;
					this.SendPropertyChanged("MaVoucher");
					this.OnMaVoucherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhuyenMai_ChiTietKhuyenMai", Storage="_KhuyenMai", ThisKey="MaVoucher", OtherKey="MaVoucher", IsForeignKey=true)]
		public KhuyenMai KhuyenMai
		{
			get
			{
				return this._KhuyenMai.Entity;
			}
			set
			{
				KhuyenMai previousValue = this._KhuyenMai.Entity;
				if (((previousValue != value) 
							|| (this._KhuyenMai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhuyenMai.Entity = null;
						previousValue.ChiTietKhuyenMais.Remove(this);
					}
					this._KhuyenMai.Entity = value;
					if ((value != null))
					{
						value.ChiTietKhuyenMais.Add(this);
						this._MaVoucher = value.MaVoucher;
					}
					else
					{
						this._MaVoucher = default(string);
					}
					this.SendPropertyChanged("KhuyenMai");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietKhuyenMai", Storage="_SanPham", ThisKey="MaSanPham", OtherKey="MaSanPham", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.ChiTietKhuyenMais.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.ChiTietKhuyenMais.Add(this);
						this._MaSanPham = value.MaSanPham;
					}
					else
					{
						this._MaSanPham = default(string);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DanhGiaSP")]
	public partial class DanhGiaSP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaDanhGia;
		
		private double _DanhGia;
		
		private string _BinhLuan;
		
		private string _HinhAnh;
		
		private string _MaSanPham;
		
		private int _id;
		
		private EntityRef<SanPham> _SanPham;
		
		private EntityRef<TaiKhoan> _TaiKhoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDanhGiaChanging(string value);
    partial void OnMaDanhGiaChanged();
    partial void OnDanhGiaChanging(double value);
    partial void OnDanhGiaChanged();
    partial void OnBinhLuanChanging(string value);
    partial void OnBinhLuanChanged();
    partial void OnHinhAnhChanging(string value);
    partial void OnHinhAnhChanged();
    partial void OnMaSanPhamChanging(string value);
    partial void OnMaSanPhamChanged();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    #endregion
		
		public DanhGiaSP()
		{
			this._SanPham = default(EntityRef<SanPham>);
			this._TaiKhoan = default(EntityRef<TaiKhoan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDanhGia", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDanhGia
		{
			get
			{
				return this._MaDanhGia;
			}
			set
			{
				if ((this._MaDanhGia != value))
				{
					this.OnMaDanhGiaChanging(value);
					this.SendPropertyChanging();
					this._MaDanhGia = value;
					this.SendPropertyChanged("MaDanhGia");
					this.OnMaDanhGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DanhGia", DbType="Float NOT NULL")]
		public double DanhGia
		{
			get
			{
				return this._DanhGia;
			}
			set
			{
				if ((this._DanhGia != value))
				{
					this.OnDanhGiaChanging(value);
					this.SendPropertyChanging();
					this._DanhGia = value;
					this.SendPropertyChanged("DanhGia");
					this.OnDanhGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BinhLuan", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string BinhLuan
		{
			get
			{
				return this._BinhLuan;
			}
			set
			{
				if ((this._BinhLuan != value))
				{
					this.OnBinhLuanChanging(value);
					this.SendPropertyChanging();
					this._BinhLuan = value;
					this.SendPropertyChanged("BinhLuan");
					this.OnBinhLuanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhAnh", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string HinhAnh
		{
			get
			{
				return this._HinhAnh;
			}
			set
			{
				if ((this._HinhAnh != value))
				{
					this.OnHinhAnhChanging(value);
					this.SendPropertyChanging();
					this._HinhAnh = value;
					this.SendPropertyChanged("HinhAnh");
					this.OnHinhAnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSanPham", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string MaSanPham
		{
			get
			{
				return this._MaSanPham;
			}
			set
			{
				if ((this._MaSanPham != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSanPhamChanging(value);
					this.SendPropertyChanging();
					this._MaSanPham = value;
					this.SendPropertyChanged("MaSanPham");
					this.OnMaSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._TaiKhoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_DanhGiaSP", Storage="_SanPham", ThisKey="MaSanPham", OtherKey="MaSanPham", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.DanhGiaSPs.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.DanhGiaSPs.Add(this);
						this._MaSanPham = value.MaSanPham;
					}
					else
					{
						this._MaSanPham = default(string);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_DanhGiaSP", Storage="_TaiKhoan", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public TaiKhoan TaiKhoan
		{
			get
			{
				return this._TaiKhoan.Entity;
			}
			set
			{
				TaiKhoan previousValue = this._TaiKhoan.Entity;
				if (((previousValue != value) 
							|| (this._TaiKhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiKhoan.Entity = null;
						previousValue.DanhGiaSPs.Remove(this);
					}
					this._TaiKhoan.Entity = value;
					if ((value != null))
					{
						value.DanhGiaSPs.Add(this);
						this._id = value.id;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("TaiKhoan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DichVu")]
	public partial class DichVu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _TenDichVu;
		
		private string _MoTaChiTiet;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnTenDichVuChanging(string value);
    partial void OnTenDichVuChanged();
    partial void OnMoTaChiTietChanging(string value);
    partial void OnMoTaChiTietChanged();
    #endregion
		
		public DichVu()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDichVu", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenDichVu
		{
			get
			{
				return this._TenDichVu;
			}
			set
			{
				if ((this._TenDichVu != value))
				{
					this.OnTenDichVuChanging(value);
					this.SendPropertyChanging();
					this._TenDichVu = value;
					this.SendPropertyChanged("TenDichVu");
					this.OnTenDichVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTaChiTiet", DbType="NVarChar(2000)")]
		public string MoTaChiTiet
		{
			get
			{
				return this._MoTaChiTiet;
			}
			set
			{
				if ((this._MoTaChiTiet != value))
				{
					this.OnMoTaChiTietChanging(value);
					this.SendPropertyChanging();
					this._MoTaChiTiet = value;
					this.SendPropertyChanged("MoTaChiTiet");
					this.OnMoTaChiTietChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DonHang")]
	public partial class DonHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaDH;
		
		private System.DateTime _NgayLap;
		
		private int _TongTien;
		
		private string _DiaChiGiaoHang;
		
		private string _TrangThaiDH;
		
		private string _ThongTinDH;
		
		private EntitySet<ChiTietDonHang> _ChiTietDonHangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDHChanging(string value);
    partial void OnMaDHChanged();
    partial void OnNgayLapChanging(System.DateTime value);
    partial void OnNgayLapChanged();
    partial void OnTongTienChanging(int value);
    partial void OnTongTienChanged();
    partial void OnDiaChiGiaoHangChanging(string value);
    partial void OnDiaChiGiaoHangChanged();
    partial void OnTrangThaiDHChanging(string value);
    partial void OnTrangThaiDHChanged();
    partial void OnThongTinDHChanging(string value);
    partial void OnThongTinDHChanged();
    #endregion
		
		public DonHang()
		{
			this._ChiTietDonHangs = new EntitySet<ChiTietDonHang>(new Action<ChiTietDonHang>(this.attach_ChiTietDonHangs), new Action<ChiTietDonHang>(this.detach_ChiTietDonHangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDH", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDH
		{
			get
			{
				return this._MaDH;
			}
			set
			{
				if ((this._MaDH != value))
				{
					this.OnMaDHChanging(value);
					this.SendPropertyChanging();
					this._MaDH = value;
					this.SendPropertyChanged("MaDH");
					this.OnMaDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayLap", DbType="DateTime NOT NULL")]
		public System.DateTime NgayLap
		{
			get
			{
				return this._NgayLap;
			}
			set
			{
				if ((this._NgayLap != value))
				{
					this.OnNgayLapChanging(value);
					this.SendPropertyChanging();
					this._NgayLap = value;
					this.SendPropertyChanged("NgayLap");
					this.OnNgayLapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="Int NOT NULL")]
		public int TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChiGiaoHang", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string DiaChiGiaoHang
		{
			get
			{
				return this._DiaChiGiaoHang;
			}
			set
			{
				if ((this._DiaChiGiaoHang != value))
				{
					this.OnDiaChiGiaoHangChanging(value);
					this.SendPropertyChanging();
					this._DiaChiGiaoHang = value;
					this.SendPropertyChanged("DiaChiGiaoHang");
					this.OnDiaChiGiaoHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThaiDH", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string TrangThaiDH
		{
			get
			{
				return this._TrangThaiDH;
			}
			set
			{
				if ((this._TrangThaiDH != value))
				{
					this.OnTrangThaiDHChanging(value);
					this.SendPropertyChanging();
					this._TrangThaiDH = value;
					this.SendPropertyChanged("TrangThaiDH");
					this.OnTrangThaiDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThongTinDH", DbType="NVarChar(150)")]
		public string ThongTinDH
		{
			get
			{
				return this._ThongTinDH;
			}
			set
			{
				if ((this._ThongTinDH != value))
				{
					this.OnThongTinDHChanging(value);
					this.SendPropertyChanging();
					this._ThongTinDH = value;
					this.SendPropertyChanged("ThongTinDH");
					this.OnThongTinDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_ChiTietDonHang", Storage="_ChiTietDonHangs", ThisKey="MaDH", OtherKey="MaDH")]
		public EntitySet<ChiTietDonHang> ChiTietDonHangs
		{
			get
			{
				return this._ChiTietDonHangs;
			}
			set
			{
				this._ChiTietDonHangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietDonHangs(ChiTietDonHang entity)
		{
			this.SendPropertyChanging();
			entity.DonHang = this;
		}
		
		private void detach_ChiTietDonHangs(ChiTietDonHang entity)
		{
			this.SendPropertyChanging();
			entity.DonHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GioHang")]
	public partial class GioHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaGioHang;
		
		private int _id;
		
		private EntitySet<ChiTietDonHang> _ChiTietDonHangs;
		
		private EntitySet<ChiTietGioHang> _ChiTietGioHangs;
		
		private EntityRef<TaiKhoan> _TaiKhoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaGioHangChanging(string value);
    partial void OnMaGioHangChanged();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    #endregion
		
		public GioHang()
		{
			this._ChiTietDonHangs = new EntitySet<ChiTietDonHang>(new Action<ChiTietDonHang>(this.attach_ChiTietDonHangs), new Action<ChiTietDonHang>(this.detach_ChiTietDonHangs));
			this._ChiTietGioHangs = new EntitySet<ChiTietGioHang>(new Action<ChiTietGioHang>(this.attach_ChiTietGioHangs), new Action<ChiTietGioHang>(this.detach_ChiTietGioHangs));
			this._TaiKhoan = default(EntityRef<TaiKhoan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGioHang", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaGioHang
		{
			get
			{
				return this._MaGioHang;
			}
			set
			{
				if ((this._MaGioHang != value))
				{
					this.OnMaGioHangChanging(value);
					this.SendPropertyChanging();
					this._MaGioHang = value;
					this.SendPropertyChanged("MaGioHang");
					this.OnMaGioHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._TaiKhoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GioHang_ChiTietDonHang", Storage="_ChiTietDonHangs", ThisKey="MaGioHang", OtherKey="MaGioHang")]
		public EntitySet<ChiTietDonHang> ChiTietDonHangs
		{
			get
			{
				return this._ChiTietDonHangs;
			}
			set
			{
				this._ChiTietDonHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GioHang_ChiTietGioHang", Storage="_ChiTietGioHangs", ThisKey="MaGioHang", OtherKey="MaGioHang")]
		public EntitySet<ChiTietGioHang> ChiTietGioHangs
		{
			get
			{
				return this._ChiTietGioHangs;
			}
			set
			{
				this._ChiTietGioHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_GioHang", Storage="_TaiKhoan", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public TaiKhoan TaiKhoan
		{
			get
			{
				return this._TaiKhoan.Entity;
			}
			set
			{
				TaiKhoan previousValue = this._TaiKhoan.Entity;
				if (((previousValue != value) 
							|| (this._TaiKhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiKhoan.Entity = null;
						previousValue.GioHangs.Remove(this);
					}
					this._TaiKhoan.Entity = value;
					if ((value != null))
					{
						value.GioHangs.Add(this);
						this._id = value.id;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("TaiKhoan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietDonHangs(ChiTietDonHang entity)
		{
			this.SendPropertyChanging();
			entity.GioHang = this;
		}
		
		private void detach_ChiTietDonHangs(ChiTietDonHang entity)
		{
			this.SendPropertyChanging();
			entity.GioHang = null;
		}
		
		private void attach_ChiTietGioHangs(ChiTietGioHang entity)
		{
			this.SendPropertyChanging();
			entity.GioHang = this;
		}
		
		private void detach_ChiTietGioHangs(ChiTietGioHang entity)
		{
			this.SendPropertyChanging();
			entity.GioHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HinhAnhSanPham")]
	public partial class HinhAnhSanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _MaSanPham;
		
		private string _HinhAnh;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnMaSanPhamChanging(string value);
    partial void OnMaSanPhamChanged();
    partial void OnHinhAnhChanging(string value);
    partial void OnHinhAnhChanged();
    #endregion
		
		public HinhAnhSanPham()
		{
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSanPham", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSanPham
		{
			get
			{
				return this._MaSanPham;
			}
			set
			{
				if ((this._MaSanPham != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSanPhamChanging(value);
					this.SendPropertyChanging();
					this._MaSanPham = value;
					this.SendPropertyChanged("MaSanPham");
					this.OnMaSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhAnh", DbType="NVarChar(100)")]
		public string HinhAnh
		{
			get
			{
				return this._HinhAnh;
			}
			set
			{
				if ((this._HinhAnh != value))
				{
					this.OnHinhAnhChanging(value);
					this.SendPropertyChanging();
					this._HinhAnh = value;
					this.SendPropertyChanged("HinhAnh");
					this.OnHinhAnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_HinhAnhSanPham", Storage="_SanPham", ThisKey="MaSanPham", OtherKey="MaSanPham", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.HinhAnhSanPhams.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.HinhAnhSanPhams.Add(this);
						this._MaSanPham = value.MaSanPham;
					}
					else
					{
						this._MaSanPham = default(string);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhuyenMai")]
	public partial class KhuyenMai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaVoucher;
		
		private string _TenChuongTrinh;
		
		private System.DateTime _ThoiGianBatDau;
		
		private System.DateTime _ThoiGianKetThuc;
		
		private string _GhiChu;
		
		private int _PhanTramGiam;
		
		private EntitySet<ChiTietKhuyenMai> _ChiTietKhuyenMais;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaVoucherChanging(string value);
    partial void OnMaVoucherChanged();
    partial void OnTenChuongTrinhChanging(string value);
    partial void OnTenChuongTrinhChanged();
    partial void OnThoiGianBatDauChanging(System.DateTime value);
    partial void OnThoiGianBatDauChanged();
    partial void OnThoiGianKetThucChanging(System.DateTime value);
    partial void OnThoiGianKetThucChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    partial void OnPhanTramGiamChanging(int value);
    partial void OnPhanTramGiamChanged();
    #endregion
		
		public KhuyenMai()
		{
			this._ChiTietKhuyenMais = new EntitySet<ChiTietKhuyenMai>(new Action<ChiTietKhuyenMai>(this.attach_ChiTietKhuyenMais), new Action<ChiTietKhuyenMai>(this.detach_ChiTietKhuyenMais));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaVoucher", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaVoucher
		{
			get
			{
				return this._MaVoucher;
			}
			set
			{
				if ((this._MaVoucher != value))
				{
					this.OnMaVoucherChanging(value);
					this.SendPropertyChanging();
					this._MaVoucher = value;
					this.SendPropertyChanged("MaVoucher");
					this.OnMaVoucherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenChuongTrinh", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenChuongTrinh
		{
			get
			{
				return this._TenChuongTrinh;
			}
			set
			{
				if ((this._TenChuongTrinh != value))
				{
					this.OnTenChuongTrinhChanging(value);
					this.SendPropertyChanging();
					this._TenChuongTrinh = value;
					this.SendPropertyChanged("TenChuongTrinh");
					this.OnTenChuongTrinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianBatDau", DbType="DateTime NOT NULL")]
		public System.DateTime ThoiGianBatDau
		{
			get
			{
				return this._ThoiGianBatDau;
			}
			set
			{
				if ((this._ThoiGianBatDau != value))
				{
					this.OnThoiGianBatDauChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianBatDau = value;
					this.SendPropertyChanged("ThoiGianBatDau");
					this.OnThoiGianBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianKetThuc", DbType="DateTime NOT NULL")]
		public System.DateTime ThoiGianKetThuc
		{
			get
			{
				return this._ThoiGianKetThuc;
			}
			set
			{
				if ((this._ThoiGianKetThuc != value))
				{
					this.OnThoiGianKetThucChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianKetThuc = value;
					this.SendPropertyChanged("ThoiGianKetThuc");
					this.OnThoiGianKetThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhanTramGiam", DbType="Int NOT NULL")]
		public int PhanTramGiam
		{
			get
			{
				return this._PhanTramGiam;
			}
			set
			{
				if ((this._PhanTramGiam != value))
				{
					this.OnPhanTramGiamChanging(value);
					this.SendPropertyChanging();
					this._PhanTramGiam = value;
					this.SendPropertyChanged("PhanTramGiam");
					this.OnPhanTramGiamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhuyenMai_ChiTietKhuyenMai", Storage="_ChiTietKhuyenMais", ThisKey="MaVoucher", OtherKey="MaVoucher")]
		public EntitySet<ChiTietKhuyenMai> ChiTietKhuyenMais
		{
			get
			{
				return this._ChiTietKhuyenMais;
			}
			set
			{
				this._ChiTietKhuyenMais.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietKhuyenMais(ChiTietKhuyenMai entity)
		{
			this.SendPropertyChanging();
			entity.KhuyenMai = this;
		}
		
		private void detach_ChiTietKhuyenMais(ChiTietKhuyenMai entity)
		{
			this.SendPropertyChanging();
			entity.KhuyenMai = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiSP")]
	public partial class LoaiSP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLoaiSP;
		
		private string _TenLoaiSP;
		
		private string _MaPhong;
		
		private EntitySet<SanPham> _SanPhams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiSPChanging(string value);
    partial void OnMaLoaiSPChanged();
    partial void OnTenLoaiSPChanging(string value);
    partial void OnTenLoaiSPChanged();
    partial void OnMaPhongChanging(string value);
    partial void OnMaPhongChanged();
    #endregion
		
		public LoaiSP()
		{
			this._SanPhams = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams), new Action<SanPham>(this.detach_SanPhams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiSP", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLoaiSP
		{
			get
			{
				return this._MaLoaiSP;
			}
			set
			{
				if ((this._MaLoaiSP != value))
				{
					this.OnMaLoaiSPChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiSP = value;
					this.SendPropertyChanged("MaLoaiSP");
					this.OnMaLoaiSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoaiSP", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenLoaiSP
		{
			get
			{
				return this._TenLoaiSP;
			}
			set
			{
				if ((this._TenLoaiSP != value))
				{
					this.OnTenLoaiSPChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiSP = value;
					this.SendPropertyChanged("TenLoaiSP");
					this.OnTenLoaiSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhong", DbType="NChar(10)")]
		public string MaPhong
		{
			get
			{
				return this._MaPhong;
			}
			set
			{
				if ((this._MaPhong != value))
				{
					this.OnMaPhongChanging(value);
					this.SendPropertyChanging();
					this._MaPhong = value;
					this.SendPropertyChanged("MaPhong");
					this.OnMaPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiSP_SanPham", Storage="_SanPhams", ThisKey="MaLoaiSP", OtherKey="MaLoaiSP")]
		public EntitySet<SanPham> SanPhams
		{
			get
			{
				return this._SanPhams;
			}
			set
			{
				this._SanPhams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.LoaiSP = this;
		}
		
		private void detach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.LoaiSP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhanQuyenNhanVien")]
	public partial class PhanQuyenNhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaChucNang;
		
		private string _TenChucNang;
		
		private string _idNhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaChucNangChanging(int value);
    partial void OnMaChucNangChanged();
    partial void OnTenChucNangChanging(string value);
    partial void OnTenChucNangChanged();
    partial void OnidNhanVienChanging(string value);
    partial void OnidNhanVienChanged();
    #endregion
		
		public PhanQuyenNhanVien()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaChucNang", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaChucNang
		{
			get
			{
				return this._MaChucNang;
			}
			set
			{
				if ((this._MaChucNang != value))
				{
					this.OnMaChucNangChanging(value);
					this.SendPropertyChanging();
					this._MaChucNang = value;
					this.SendPropertyChanged("MaChucNang");
					this.OnMaChucNangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenChucNang", DbType="NVarChar(255)")]
		public string TenChucNang
		{
			get
			{
				return this._TenChucNang;
			}
			set
			{
				if ((this._TenChucNang != value))
				{
					this.OnTenChucNangChanging(value);
					this.SendPropertyChanging();
					this._TenChucNang = value;
					this.SendPropertyChanged("TenChucNang");
					this.OnTenChucNangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idNhanVien", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string idNhanVien
		{
			get
			{
				return this._idNhanVien;
			}
			set
			{
				if ((this._idNhanVien != value))
				{
					this.OnidNhanVienChanging(value);
					this.SendPropertyChanging();
					this._idNhanVien = value;
					this.SendPropertyChanged("idNhanVien");
					this.OnidNhanVienChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Phong")]
	public partial class Phong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaPhong;
		
		private string _TenPhong;
		
		private EntitySet<SanPham> _SanPhams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhongChanging(string value);
    partial void OnMaPhongChanged();
    partial void OnTenPhongChanging(string value);
    partial void OnTenPhongChanged();
    #endregion
		
		public Phong()
		{
			this._SanPhams = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams), new Action<SanPham>(this.detach_SanPhams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhong", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaPhong
		{
			get
			{
				return this._MaPhong;
			}
			set
			{
				if ((this._MaPhong != value))
				{
					this.OnMaPhongChanging(value);
					this.SendPropertyChanging();
					this._MaPhong = value;
					this.SendPropertyChanged("MaPhong");
					this.OnMaPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPhong", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenPhong
		{
			get
			{
				return this._TenPhong;
			}
			set
			{
				if ((this._TenPhong != value))
				{
					this.OnTenPhongChanging(value);
					this.SendPropertyChanging();
					this._TenPhong = value;
					this.SendPropertyChanged("TenPhong");
					this.OnTenPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phong_SanPham", Storage="_SanPhams", ThisKey="MaPhong", OtherKey="MaPhong")]
		public EntitySet<SanPham> SanPhams
		{
			get
			{
				return this._SanPhams;
			}
			set
			{
				this._SanPhams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.Phong = this;
		}
		
		private void detach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.Phong = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SanPham")]
	public partial class SanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaSanPham;
		
		private string _TenSanPham;
		
		private string _VatLieu;
		
		private string _KichThuoc;
		
		private int _Gia;
		
		private string _HinhAnh;
		
		private string _MoTa;
		
		private int _SoLuongTon;
		
		private string _MaLoaiSP;
		
		private string _MaPhong;
		
		private string _AnHien;
		
		private EntitySet<ChiTietDanhMucYeuThich> _ChiTietDanhMucYeuThiches;
		
		private EntitySet<ChiTietGioHang> _ChiTietGioHangs;
		
		private EntitySet<ChiTietKhuyenMai> _ChiTietKhuyenMais;
		
		private EntitySet<DanhGiaSP> _DanhGiaSPs;
		
		private EntitySet<HinhAnhSanPham> _HinhAnhSanPhams;
		
		private EntityRef<LoaiSP> _LoaiSP;
		
		private EntityRef<Phong> _Phong;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSanPhamChanging(string value);
    partial void OnMaSanPhamChanged();
    partial void OnTenSanPhamChanging(string value);
    partial void OnTenSanPhamChanged();
    partial void OnVatLieuChanging(string value);
    partial void OnVatLieuChanged();
    partial void OnKichThuocChanging(string value);
    partial void OnKichThuocChanged();
    partial void OnGiaChanging(int value);
    partial void OnGiaChanged();
    partial void OnHinhAnhChanging(string value);
    partial void OnHinhAnhChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    partial void OnSoLuongTonChanging(int value);
    partial void OnSoLuongTonChanged();
    partial void OnMaLoaiSPChanging(string value);
    partial void OnMaLoaiSPChanged();
    partial void OnMaPhongChanging(string value);
    partial void OnMaPhongChanged();
    partial void OnAnHienChanging(string value);
    partial void OnAnHienChanged();
    #endregion
		
		public SanPham()
		{
			this._ChiTietDanhMucYeuThiches = new EntitySet<ChiTietDanhMucYeuThich>(new Action<ChiTietDanhMucYeuThich>(this.attach_ChiTietDanhMucYeuThiches), new Action<ChiTietDanhMucYeuThich>(this.detach_ChiTietDanhMucYeuThiches));
			this._ChiTietGioHangs = new EntitySet<ChiTietGioHang>(new Action<ChiTietGioHang>(this.attach_ChiTietGioHangs), new Action<ChiTietGioHang>(this.detach_ChiTietGioHangs));
			this._ChiTietKhuyenMais = new EntitySet<ChiTietKhuyenMai>(new Action<ChiTietKhuyenMai>(this.attach_ChiTietKhuyenMais), new Action<ChiTietKhuyenMai>(this.detach_ChiTietKhuyenMais));
			this._DanhGiaSPs = new EntitySet<DanhGiaSP>(new Action<DanhGiaSP>(this.attach_DanhGiaSPs), new Action<DanhGiaSP>(this.detach_DanhGiaSPs));
			this._HinhAnhSanPhams = new EntitySet<HinhAnhSanPham>(new Action<HinhAnhSanPham>(this.attach_HinhAnhSanPhams), new Action<HinhAnhSanPham>(this.detach_HinhAnhSanPhams));
			this._LoaiSP = default(EntityRef<LoaiSP>);
			this._Phong = default(EntityRef<Phong>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSanPham", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSanPham
		{
			get
			{
				return this._MaSanPham;
			}
			set
			{
				if ((this._MaSanPham != value))
				{
					this.OnMaSanPhamChanging(value);
					this.SendPropertyChanging();
					this._MaSanPham = value;
					this.SendPropertyChanged("MaSanPham");
					this.OnMaSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSanPham", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenSanPham
		{
			get
			{
				return this._TenSanPham;
			}
			set
			{
				if ((this._TenSanPham != value))
				{
					this.OnTenSanPhamChanging(value);
					this.SendPropertyChanging();
					this._TenSanPham = value;
					this.SendPropertyChanged("TenSanPham");
					this.OnTenSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VatLieu", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string VatLieu
		{
			get
			{
				return this._VatLieu;
			}
			set
			{
				if ((this._VatLieu != value))
				{
					this.OnVatLieuChanging(value);
					this.SendPropertyChanging();
					this._VatLieu = value;
					this.SendPropertyChanged("VatLieu");
					this.OnVatLieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KichThuoc", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string KichThuoc
		{
			get
			{
				return this._KichThuoc;
			}
			set
			{
				if ((this._KichThuoc != value))
				{
					this.OnKichThuocChanging(value);
					this.SendPropertyChanging();
					this._KichThuoc = value;
					this.SendPropertyChanged("KichThuoc");
					this.OnKichThuocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Int NOT NULL")]
		public int Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this.OnGiaChanging(value);
					this.SendPropertyChanging();
					this._Gia = value;
					this.SendPropertyChanged("Gia");
					this.OnGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhAnh", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string HinhAnh
		{
			get
			{
				return this._HinhAnh;
			}
			set
			{
				if ((this._HinhAnh != value))
				{
					this.OnHinhAnhChanging(value);
					this.SendPropertyChanging();
					this._HinhAnh = value;
					this.SendPropertyChanged("HinhAnh");
					this.OnHinhAnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongTon", DbType="Int NOT NULL")]
		public int SoLuongTon
		{
			get
			{
				return this._SoLuongTon;
			}
			set
			{
				if ((this._SoLuongTon != value))
				{
					this.OnSoLuongTonChanging(value);
					this.SendPropertyChanging();
					this._SoLuongTon = value;
					this.SendPropertyChanged("SoLuongTon");
					this.OnSoLuongTonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiSP", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string MaLoaiSP
		{
			get
			{
				return this._MaLoaiSP;
			}
			set
			{
				if ((this._MaLoaiSP != value))
				{
					if (this._LoaiSP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiSPChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiSP = value;
					this.SendPropertyChanged("MaLoaiSP");
					this.OnMaLoaiSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhong", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string MaPhong
		{
			get
			{
				return this._MaPhong;
			}
			set
			{
				if ((this._MaPhong != value))
				{
					if (this._Phong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPhongChanging(value);
					this.SendPropertyChanging();
					this._MaPhong = value;
					this.SendPropertyChanged("MaPhong");
					this.OnMaPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnHien", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AnHien
		{
			get
			{
				return this._AnHien;
			}
			set
			{
				if ((this._AnHien != value))
				{
					this.OnAnHienChanging(value);
					this.SendPropertyChanging();
					this._AnHien = value;
					this.SendPropertyChanged("AnHien");
					this.OnAnHienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietDanhMucYeuThich", Storage="_ChiTietDanhMucYeuThiches", ThisKey="MaSanPham", OtherKey="MaSanPham")]
		public EntitySet<ChiTietDanhMucYeuThich> ChiTietDanhMucYeuThiches
		{
			get
			{
				return this._ChiTietDanhMucYeuThiches;
			}
			set
			{
				this._ChiTietDanhMucYeuThiches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietGioHang", Storage="_ChiTietGioHangs", ThisKey="MaSanPham", OtherKey="MaSanPham")]
		public EntitySet<ChiTietGioHang> ChiTietGioHangs
		{
			get
			{
				return this._ChiTietGioHangs;
			}
			set
			{
				this._ChiTietGioHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietKhuyenMai", Storage="_ChiTietKhuyenMais", ThisKey="MaSanPham", OtherKey="MaSanPham")]
		public EntitySet<ChiTietKhuyenMai> ChiTietKhuyenMais
		{
			get
			{
				return this._ChiTietKhuyenMais;
			}
			set
			{
				this._ChiTietKhuyenMais.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_DanhGiaSP", Storage="_DanhGiaSPs", ThisKey="MaSanPham", OtherKey="MaSanPham")]
		public EntitySet<DanhGiaSP> DanhGiaSPs
		{
			get
			{
				return this._DanhGiaSPs;
			}
			set
			{
				this._DanhGiaSPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_HinhAnhSanPham", Storage="_HinhAnhSanPhams", ThisKey="MaSanPham", OtherKey="MaSanPham")]
		public EntitySet<HinhAnhSanPham> HinhAnhSanPhams
		{
			get
			{
				return this._HinhAnhSanPhams;
			}
			set
			{
				this._HinhAnhSanPhams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiSP_SanPham", Storage="_LoaiSP", ThisKey="MaLoaiSP", OtherKey="MaLoaiSP", IsForeignKey=true)]
		public LoaiSP LoaiSP
		{
			get
			{
				return this._LoaiSP.Entity;
			}
			set
			{
				LoaiSP previousValue = this._LoaiSP.Entity;
				if (((previousValue != value) 
							|| (this._LoaiSP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiSP.Entity = null;
						previousValue.SanPhams.Remove(this);
					}
					this._LoaiSP.Entity = value;
					if ((value != null))
					{
						value.SanPhams.Add(this);
						this._MaLoaiSP = value.MaLoaiSP;
					}
					else
					{
						this._MaLoaiSP = default(string);
					}
					this.SendPropertyChanged("LoaiSP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phong_SanPham", Storage="_Phong", ThisKey="MaPhong", OtherKey="MaPhong", IsForeignKey=true)]
		public Phong Phong
		{
			get
			{
				return this._Phong.Entity;
			}
			set
			{
				Phong previousValue = this._Phong.Entity;
				if (((previousValue != value) 
							|| (this._Phong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Phong.Entity = null;
						previousValue.SanPhams.Remove(this);
					}
					this._Phong.Entity = value;
					if ((value != null))
					{
						value.SanPhams.Add(this);
						this._MaPhong = value.MaPhong;
					}
					else
					{
						this._MaPhong = default(string);
					}
					this.SendPropertyChanged("Phong");
				}
			}
		}

        public int GiamGia { get; internal set; }
        public int PhanTramGiam { get; internal set; }

        public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietDanhMucYeuThiches(ChiTietDanhMucYeuThich entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_ChiTietDanhMucYeuThiches(ChiTietDanhMucYeuThich entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
		
		private void attach_ChiTietGioHangs(ChiTietGioHang entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_ChiTietGioHangs(ChiTietGioHang entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
		
		private void attach_ChiTietKhuyenMais(ChiTietKhuyenMai entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_ChiTietKhuyenMais(ChiTietKhuyenMai entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
		
		private void attach_DanhGiaSPs(DanhGiaSP entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_DanhGiaSPs(DanhGiaSP entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
		
		private void attach_HinhAnhSanPhams(HinhAnhSanPham entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_HinhAnhSanPhams(HinhAnhSanPham entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaiKhoan")]
	public partial class TaiKhoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _TenDangNhap;
		
		private string _MatKhau;
		
		private string _LoaiTK;
		
		private int _idTK;
		
		private EntitySet<WishList> _WishLists;
		
		private EntitySet<DanhGiaSP> _DanhGiaSPs;
		
		private EntitySet<GioHang> _GioHangs;
		
		private EntityRef<ThongTinCaNhan> _ThongTinCaNhan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnTenDangNhapChanging(string value);
    partial void OnTenDangNhapChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnLoaiTKChanging(string value);
    partial void OnLoaiTKChanged();
    partial void OnidTKChanging(int value);
    partial void OnidTKChanged();
    #endregion
		
		public TaiKhoan()
		{
			this._WishLists = new EntitySet<WishList>(new Action<WishList>(this.attach_WishLists), new Action<WishList>(this.detach_WishLists));
			this._DanhGiaSPs = new EntitySet<DanhGiaSP>(new Action<DanhGiaSP>(this.attach_DanhGiaSPs), new Action<DanhGiaSP>(this.detach_DanhGiaSPs));
			this._GioHangs = new EntitySet<GioHang>(new Action<GioHang>(this.attach_GioHangs), new Action<GioHang>(this.detach_GioHangs));
			this._ThongTinCaNhan = default(EntityRef<ThongTinCaNhan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDangNhap", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenDangNhap
		{
			get
			{
				return this._TenDangNhap;
			}
			set
			{
				if ((this._TenDangNhap != value))
				{
					this.OnTenDangNhapChanging(value);
					this.SendPropertyChanging();
					this._TenDangNhap = value;
					this.SendPropertyChanged("TenDangNhap");
					this.OnTenDangNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiTK", DbType="NChar(20) NOT NULL", CanBeNull=false)]
		public string LoaiTK
		{
			get
			{
				return this._LoaiTK;
			}
			set
			{
				if ((this._LoaiTK != value))
				{
					this.OnLoaiTKChanging(value);
					this.SendPropertyChanging();
					this._LoaiTK = value;
					this.SendPropertyChanged("LoaiTK");
					this.OnLoaiTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTK", DbType="Int NOT NULL")]
		public int idTK
		{
			get
			{
				return this._idTK;
			}
			set
			{
				if ((this._idTK != value))
				{
					if (this._ThongTinCaNhan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTKChanging(value);
					this.SendPropertyChanging();
					this._idTK = value;
					this.SendPropertyChanged("idTK");
					this.OnidTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_WishList", Storage="_WishLists", ThisKey="id", OtherKey="id")]
		public EntitySet<WishList> WishLists
		{
			get
			{
				return this._WishLists;
			}
			set
			{
				this._WishLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_DanhGiaSP", Storage="_DanhGiaSPs", ThisKey="id", OtherKey="id")]
		public EntitySet<DanhGiaSP> DanhGiaSPs
		{
			get
			{
				return this._DanhGiaSPs;
			}
			set
			{
				this._DanhGiaSPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_GioHang", Storage="_GioHangs", ThisKey="id", OtherKey="id")]
		public EntitySet<GioHang> GioHangs
		{
			get
			{
				return this._GioHangs;
			}
			set
			{
				this._GioHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThongTinCaNhan_TaiKhoan", Storage="_ThongTinCaNhan", ThisKey="idTK", OtherKey="idTK", IsForeignKey=true)]
		public ThongTinCaNhan ThongTinCaNhan
		{
			get
			{
				return this._ThongTinCaNhan.Entity;
			}
			set
			{
				ThongTinCaNhan previousValue = this._ThongTinCaNhan.Entity;
				if (((previousValue != value) 
							|| (this._ThongTinCaNhan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThongTinCaNhan.Entity = null;
						previousValue.TaiKhoans.Remove(this);
					}
					this._ThongTinCaNhan.Entity = value;
					if ((value != null))
					{
						value.TaiKhoans.Add(this);
						this._idTK = value.idTK;
					}
					else
					{
						this._idTK = default(int);
					}
					this.SendPropertyChanged("ThongTinCaNhan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WishLists(WishList entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = this;
		}
		
		private void detach_WishLists(WishList entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = null;
		}
		
		private void attach_DanhGiaSPs(DanhGiaSP entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = this;
		}
		
		private void detach_DanhGiaSPs(DanhGiaSP entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = null;
		}
		
		private void attach_GioHangs(GioHang entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = this;
		}
		
		private void detach_GioHangs(GioHang entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThongTinCaNhan")]
	public partial class ThongTinCaNhan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idTK;
		
		private string _HoTen;
		
		private string _Email;
		
		private string _Sdt;
		
		private string _DiaChi;
		
		private System.Nullable<bool> _IsEmailConfirmed;
		
		private System.Nullable<int> _ConfirmationCode;
		
		private string _TrangThai;
		
		private System.Nullable<System.DateTime> _NgayBatDau;
		
		private System.Nullable<System.DateTime> _NgayKetThuc;
		
		private EntitySet<TaiKhoan> _TaiKhoans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTKChanging(int value);
    partial void OnidTKChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnSdtChanging(string value);
    partial void OnSdtChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnIsEmailConfirmedChanging(System.Nullable<bool> value);
    partial void OnIsEmailConfirmedChanged();
    partial void OnConfirmationCodeChanging(System.Nullable<int> value);
    partial void OnConfirmationCodeChanged();
    partial void OnTrangThaiChanging(string value);
    partial void OnTrangThaiChanged();
    partial void OnNgayBatDauChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayBatDauChanged();
    partial void OnNgayKetThucChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayKetThucChanged();
    #endregion
		
		public ThongTinCaNhan()
		{
			this._TaiKhoans = new EntitySet<TaiKhoan>(new Action<TaiKhoan>(this.attach_TaiKhoans), new Action<TaiKhoan>(this.detach_TaiKhoans));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTK", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idTK
		{
			get
			{
				return this._idTK;
			}
			set
			{
				if ((this._idTK != value))
				{
					this.OnidTKChanging(value);
					this.SendPropertyChanging();
					this._idTK = value;
					this.SendPropertyChanged("idTK");
					this.OnidTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sdt", DbType="NChar(10)")]
		public string Sdt
		{
			get
			{
				return this._Sdt;
			}
			set
			{
				if ((this._Sdt != value))
				{
					this.OnSdtChanging(value);
					this.SendPropertyChanging();
					this._Sdt = value;
					this.SendPropertyChanged("Sdt");
					this.OnSdtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(250)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEmailConfirmed", DbType="Bit")]
		public System.Nullable<bool> IsEmailConfirmed
		{
			get
			{
				return this._IsEmailConfirmed;
			}
			set
			{
				if ((this._IsEmailConfirmed != value))
				{
					this.OnIsEmailConfirmedChanging(value);
					this.SendPropertyChanging();
					this._IsEmailConfirmed = value;
					this.SendPropertyChanged("IsEmailConfirmed");
					this.OnIsEmailConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmationCode", DbType="Int")]
		public System.Nullable<int> ConfirmationCode
		{
			get
			{
				return this._ConfirmationCode;
			}
			set
			{
				if ((this._ConfirmationCode != value))
				{
					this.OnConfirmationCodeChanging(value);
					this.SendPropertyChanging();
					this._ConfirmationCode = value;
					this.SendPropertyChanged("ConfirmationCode");
					this.OnConfirmationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="NVarChar(10)")]
		public string TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayBatDau", DbType="Date")]
		public System.Nullable<System.DateTime> NgayBatDau
		{
			get
			{
				return this._NgayBatDau;
			}
			set
			{
				if ((this._NgayBatDau != value))
				{
					this.OnNgayBatDauChanging(value);
					this.SendPropertyChanging();
					this._NgayBatDau = value;
					this.SendPropertyChanged("NgayBatDau");
					this.OnNgayBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayKetThuc", DbType="Date")]
		public System.Nullable<System.DateTime> NgayKetThuc
		{
			get
			{
				return this._NgayKetThuc;
			}
			set
			{
				if ((this._NgayKetThuc != value))
				{
					this.OnNgayKetThucChanging(value);
					this.SendPropertyChanging();
					this._NgayKetThuc = value;
					this.SendPropertyChanged("NgayKetThuc");
					this.OnNgayKetThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThongTinCaNhan_TaiKhoan", Storage="_TaiKhoans", ThisKey="idTK", OtherKey="idTK")]
		public EntitySet<TaiKhoan> TaiKhoans
		{
			get
			{
				return this._TaiKhoans;
			}
			set
			{
				this._TaiKhoans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TaiKhoans(TaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.ThongTinCaNhan = this;
		}
		
		private void detach_TaiKhoans(TaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.ThongTinCaNhan = null;
		}
	}
}
#pragma warning restore 1591
